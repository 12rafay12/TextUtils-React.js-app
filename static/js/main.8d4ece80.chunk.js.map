{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","react_default","a","createElement","classNameName","style","className","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","react_router_dom","to","title","aria-label","aria-current","aboutText","role","placeholder","onClick","toggleMode","htmlfor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","for","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","lowText","toLowerCase","split","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","class","data-bs-dismiss","defaultProps","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","react","document","body","react_router","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8d4ece80.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  // const [myStyle, setmyStyle] = useState({\r\n  //   color: \"black\",\r\n  //   backgroundColor: \"white\",\r\n  // });\r\n  let myStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n    backgroundColor: props.mode === \"dark\" ? \"rgb(36,74,104)\" : \"white\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      classNameName=\"container\"\r\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n    >\r\n      <h2 className=\"my-3\">About Us</h2>\r\n      <div\r\n        className=\"accordion accordion-flush\"\r\n        id=\"accordionFlushExample\"\r\n        style={{\r\n          backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"flush-headingOne\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#flush-collapseOne\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"flush-collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"flush-collapseOne\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"flush-headingOne\"\r\n            data-bs-parent=\"#accordionFlushExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              Placeholder content for this accordion, which is intended to\r\n              demonstrate the <code>.accordion-flush</code> className. This is\r\n              the first item's accordion body.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#flush-collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"flush-collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"flush-collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"flush-headingTwo\"\r\n            data-bs-parent=\"#accordionFlushExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              Placeholder content for this accordion, which is intended to\r\n              demonstrate the <code>.accordion-flush</code> className. This is\r\n              the second item's accordion body. Let's imagine this being filled\r\n              with some actual content.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"flush-headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#flush-collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"flush-collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"flush-collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"flush-headingThree\"\r\n            data-bs-parent=\"#accordionFlushExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              Placeholder content for this accordion, which is intended to\r\n              demonstrate the <code>.accordion-flush</code> className. This is\r\n              the third item's accordion body. Nothing more exciting happening\r\n              here in terms of content, but just filling up the space to make it\r\n              look, at least at first glance, a bit more representative of how\r\n              this would look in a real-world application.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"container\">\r\n        { <button\r\n          type=\"button\"\r\n          className=\"btn btn-dark my-3\"\r\n          onClick={toggleStyle}\r\n        >\r\n          {btnText}\r\n        </button>  }\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            } mx-2 my-2`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlfor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set Title here\",\r\n  aboutText: \"About Text Here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"Enter text here\");\r\n\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\" Converted to UpperCase\", \"success\");\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    let lowText = text.toLowerCase();\r\n    setText(lowText);\r\n    props.showAlert(\" Converted to LowerCase\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleTxtAreaClick = () => {\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <div className=\"mb-3\">\r\n          <label for=\"myBox\" className=\"form-label\">\r\n            <h2>{props.heading}</h2>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            onClick={handleTxtAreaClick}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-3 my-3\"\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert To UPPERCASE\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-primary mx-3 my-3\"\r\n          onClick={handleLowClick}\r\n        >\r\n          Convert To lowercase\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n        }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          <b>\r\n            {\r\n              text.split(\" \").filter((element) => {\r\n                return element.length !== 0;\r\n              }).length\r\n            }\r\n          </b>{\" \"}\r\n          words and <b>{text.length}</b> characters. <br />\r\n          You can read the text in{\" \"}\r\n          <b>\r\n            {0.008 *\r\n              text.split(\" \").filter((element) => {\r\n                return element.length !== 0;\r\n              }).length}\r\n          </b>{\" \"}\r\n          minutes.\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter Something to Preview here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn-close\"\r\n            data-bs-dismiss=\"alert\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { Fragment } from \"react\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\" Dark Mode has been Enabled\", \"success\");\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" White Mode has been Enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Fragment>\n          <Navbar\n            title=\"Text Utils\"\n            aboutText=\"About Us\"\n            mode={mode}\n            toggleMode={toggleMode}\n          />\n          <Alert alert={alert} />\n          <div className=\"container my-3\">\n            <Routes>\n              <Route path=\"/about\" element={<About mode={mode} />}></Route>\n              <Route\n                path=\"/\"\n                element={\n                  <TextForm\n                    showAlert={showAlert}\n                    heading=\"TextUtils - Word Counter, Character Counter \"\n                    mode={mode}\n                  />\n                }\n              ></Route>\n            </Routes>\n          </div>\n        </Fragment>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}